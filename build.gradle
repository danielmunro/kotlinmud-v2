plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.7.10'
    id 'org.sonarqube' version '3.4.0.2513'
    id 'jacoco'
    id 'application'
}

apply plugin: 'jacoco'

jacocoTestReport {
    reports {
        xml.enabled = true
    }
}

def env = System.getenv()

sonarqube {
    properties {
        property "sonar.projectKey", "danielmunro_kotlinmudv2"
        property "sonar.organization", "danielmunro-github"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.login", env["SONARCLOUD"]
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.coverage.jacoco.xmlReportPaths", file("${rootProject.projectDir}/build/reports/jacoco/test/jacocoTestReport.xml")
    }
}

jacocoTestReport.dependsOn {
    subprojects*.test
}

repositories {
    mavenCentral()
}

dependencies {
    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib"

    // experimental coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4"

    // kodein
    implementation 'org.kodein.di:kodein-di-jvm:7.13.1'

    // orm
    implementation "org.jetbrains.exposed:exposed-core:0.38.2"
    implementation "org.jetbrains.exposed:exposed-dao:0.38.2"
    implementation "org.jetbrains.exposed:exposed-jdbc:0.38.2"
    implementation "org.xerial:sqlite-jdbc:3.30.1"

    // h2
    implementation "com.h2database:h2:2.1.214"

    // use the Kotlin test library
    testImplementation 'org.jetbrains.kotlin:kotlin-test'

    // assert library
    testImplementation 'com.willowtreeapps.assertk:assertk-jvm:0.25'

    // web server
    implementation "io.ktor:ktor-server-core:2.0.3"
    implementation "io.ktor:ktor-server-netty:2.0.3"
    implementation "io.ktor:ktor-server-status-pages:2.0.3"
    implementation "io.ktor:ktor-server-default-headers:2.0.3"

    // json
    implementation 'com.google.code.gson:gson:2.9.0'
}

test {
    useJUnitPlatform()
}

application {
    // Define the main class for the application.
    mainClassName = 'kotlinmudv2.AppKt'
}
